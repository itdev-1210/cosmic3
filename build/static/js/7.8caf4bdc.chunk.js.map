{"version":3,"sources":["app/EgretLayout/SharedCompoents/Rating.jsx","app/EgretLayout/Layout1/Layout1Topbar.jsx","app/EgretLayout/Layout1/Layout1Sidenav.jsx","app/EgretLayout/Layout1/Layout1.jsx"],"names":["withStyles","withTheme","connect","state","props","react_default","a","createElement","className","Icon","regions","label","map","suggestion","value","selectStyles","menu","provided","Object","objectSpread","width","color","selectProps","menuColor","padding","marginTop","container","control","height","borderRadius","backgroundColor","Layout1Topbar","updateSidebarMode","sidebarSettings","_this$props","_this","settings","setLayoutSettings","layout1Settings","leftSidebar","handleSignOut","logoutUser","_this$props2","this","theme","topbarTheme","themes","topbar","MuiThemeProvider","react_select_browser_esm","styles","placeholder","options","InputBase","inputProps","style","fontSize","fullWidth","NotificationBar","SharedCompoents_Rating","egret","menuButton","src","alt","MenuItem","minWidth","react_router_dom","to","onClick","Component","root","withRouter","PropTypes","func","isRequired","layout","Layout1Sidenav","IconButton","sidenavToggleChecked","hidden","setDefaultSettings","updatedSettings","renderUser","_this2","unlistenRouteChange","history","listen","location","action","isMdScreen","mode","setTimeout","setState","sidenavTheme","SidenavTheme","react","Sidenav","user","Layout1","_layoutClasses","classes","layoutClasses","defineProperty","concat","activeLayout","palette","type","fixed","appContext","Consumer","_ref","routes","classList","show","Layout1_Layout1Sidenav","Layout1_Layout1Topbar","perfectScrollbar","lib_default","renderRoutes","footer","Footer","background","default"],"mappings":"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","file":"static/js/7.8caf4bdc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Icon\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Rating(props) {\r\n\r\n  return (\r\n    <div className=\"rating-container\">\r\n      <div className=\"name\">Jonathan</div>\r\n      <div className=\"flex flex-middle\">\r\n        <Icon className=\"star\">star</Icon>\r\n        <span className=\"value\">4.5</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nRating.propTypes = {\r\n  \r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  \r\n});\r\n\r\nexport default withStyles({}, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    {  }\r\n  )(Rating)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  Icon,\r\n  InputBase,\r\n  MenuItem,\r\n  withStyles,\r\n  MuiThemeProvider\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { logoutUser } from \"app/redux/actions/UserActions\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { EgretMenu } from \"egret\";\r\nimport NotificationBar from \"../SharedCompoents/NotificationBar\";\r\nimport Rating from \"../SharedCompoents/Rating\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst regions = [\r\n  { label: \"All Region\" },\r\n  { label: \"Aland Islands\" },\r\n  { label: \"Albania\" },\r\n  { label: \"Algeria\" },\r\n  { label: \"American Samoa\" },\r\n  { label: \"Andorra\" }\r\n].map(suggestion => ({\r\n  value: suggestion.label,\r\n  label: suggestion.label\r\n}));\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    \r\n  },\r\n});\r\n\r\nconst selectStyles = {\r\n  menu: (provided, state) => ({\r\n    ...provided,\r\n    width: 200,\r\n    color: state.selectProps.menuColor,\r\n    padding: 5,\r\n    marginTop: '3px',\r\n  }),\r\n  container: () => ({\r\n    width: 200,\r\n  }),\r\n  control: (provided, state) => ({\r\n    ...provided,\r\n    width: 200,\r\n    height: '50px',\r\n    borderRadius: '12px',\r\n    backgroundColor: '#f5f5fb'\r\n  }),\r\n};\r\n\r\nclass Layout1Topbar extends Component {\r\n  state = {};\r\n\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n\r\n    setLayoutSettings({\r\n      ...settings,\r\n      layout1Settings: {\r\n        ...settings.layout1Settings,\r\n        leftSidebar: {\r\n          ...settings.layout1Settings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSignOut = () => {\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    let { theme, settings } = this.props;\r\n    const topbarTheme =\r\n      settings.themes[settings.layout1Settings.topbar.theme] || theme;\r\n    return (\r\n      <MuiThemeProvider theme={topbarTheme}>\r\n        <div className=\"topbar\">\r\n          <div className={`topbar-hold`}>\r\n            <div className=\"flex flex-space-between flex-middle h-100\">\r\n              <div className=\"flex\">\r\n                <Select\r\n                  styles={selectStyles}\r\n                  placeholder=\"Select Region\"\r\n                  options={regions}\r\n                  // value={single}\r\n                  // onChange={handleChangeSingle}\r\n                />\r\n                <div className=\"flex flex-middle search-container\">\r\n                  <Icon className=\"icon\">search</Icon>\r\n                  <InputBase\r\n                    placeholder=\"Search Users, Vehicles & Move...\"\r\n                    inputProps={{\r\n                      style: {\r\n                        fontSize: '14px',\r\n                        color: '#30304e'\r\n                      }  \r\n                    }}\r\n                    fullWidth\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"flex flex-middle\">\r\n                <NotificationBar />\r\n\r\n                <Rating />\r\n\r\n                <EgretMenu\r\n                  menuButton={\r\n                    <img\r\n                      className=\"ml-8 text-middle avatar-image-small cursor-pointer\"\r\n                      src=\"/assets/images/face-7.jpg\"\r\n                      alt=\"user\"\r\n                    />\r\n                  }\r\n                >\r\n                  <MenuItem style={{ minWidth: 185 }}>\r\n                    <Link\r\n                      className=\"flex flex-middle\"\r\n                      to=\"/page-layouts/user-profile\"\r\n                    >\r\n                      <span className=\"pl-16\"> My Profile </span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                  <MenuItem\r\n                    onClick={this.handleSignOut}\r\n                    className=\"flex flex-middle\"\r\n                    style={{ minWidth: 185 }}\r\n                  >\r\n                    <span className=\"pl-16\"> Logout </span>\r\n                  </MenuItem>\r\n                </EgretMenu>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nLayout1Topbar.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  withRouter(\r\n    connect(\r\n      mapStateToProps,\r\n      { setLayoutSettings, logoutUser }\r\n    )(Layout1Topbar)\r\n  )\r\n);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Switch,\r\n  Icon,\r\n  withStyles,\r\n  MenuItem,\r\n  Tooltip,\r\n  IconButton,\r\n  MuiThemeProvider\r\n} from \"@material-ui/core\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLayoutSettings,\r\n  setDefaultSettings\r\n} from \"app/redux/actions/LayoutActions\";\r\nimport { logoutUser } from \"app/redux/actions/UserActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { EgretMenu } from \"egret\";\r\nimport Sidenav from \"../SharedCompoents/Sidenav\";\r\nimport Brand from \"../SharedCompoents/Brand\";\r\nimport SidenavTheme from \"../EgretTheme/SidenavTheme\";\r\nimport { isMdScreen } from \"utils\";\r\n\r\nconst styles = theme => ({});\r\n\r\nconst IconButtonWhite = withStyles(theme => ({\r\n  root: {\r\n    // color: theme.palette.getContrastText(purple[500]),\r\n    backgroundColor: \"transparent\",\r\n    padding: \"5px\"\r\n  }\r\n}))(IconButton);\r\n\r\nconst IconSmall = withStyles(() => ({\r\n  root: {\r\n    fontSize: \"1rem\"\r\n  }\r\n}))(Icon);\r\n\r\nclass Layout1Sidenav extends Component {\r\n  state = {\r\n    sidenavToggleChecked: false,\r\n    hidden: true\r\n  };\r\n\r\n  componentWillMount() {\r\n    // CLOSE SIDENAV ON ROUTE CHANGE ON MOBILE\r\n    this.unlistenRouteChange = this.props.history.listen((location, action) => {\r\n      if (isMdScreen()) {\r\n        this.updateSidebarMode({ mode: \"close\" });\r\n      }\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.setState({ hidden: false });\r\n    }, 400);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unlistenRouteChange();\r\n  }\r\n\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings, setDefaultSettings } = this.props;\r\n    const updatedSettings = {\r\n      ...settings,\r\n      layout1Settings: {\r\n        ...settings.layout1Settings,\r\n        leftSidebar: {\r\n          ...settings.layout1Settings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    };\r\n    setLayoutSettings(updatedSettings);\r\n    setDefaultSettings(updatedSettings);\r\n  };\r\n\r\n  handleSignOut = () => {\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  renderUser = () => {\r\n    return (\r\n      <div className=\"sidenav__user\">\r\n        <div className=\"username-photo\">\r\n          <img src=\"/assets/images/sidebar/logo.svg\" alt=\"user\" />\r\n        </div>\r\n        <div className=\"weather_container\">\r\n          <div className=\"weather\">\r\n            <Icon className=\"weather_icon\">wb_sunny_outlined</Icon>\r\n          </div>\r\n          <div className=\"weather_text\">\r\n            <div className=\"temperature\">25 °C</div>\r\n            <div className=\"description\">in Bogota</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let { theme, settings } = this.props;\r\n    const sidenavTheme =\r\n      settings.themes[settings.layout1Settings.leftSidebar.theme] || theme;\r\n    return (\r\n      <MuiThemeProvider theme={sidenavTheme}>\r\n        <SidenavTheme theme={sidenavTheme} settings={settings} />\r\n\r\n        <div className=\"sidenav\">\r\n          <div className=\"sidenav__hold\">\r\n            {!this.state.hidden && (\r\n              <Fragment>\r\n                <Sidenav>{this.renderUser()}</Sidenav>\r\n              </Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nLayout1Sidenav.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: state.user,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  withRouter(\r\n    connect(\r\n      mapStateToProps,\r\n      {\r\n        setLayoutSettings,\r\n        setDefaultSettings,\r\n        logoutUser\r\n      }\r\n    )(Layout1Sidenav)\r\n  )\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport { isMdScreen, classList } from \"utils\";\r\nimport { renderRoutes } from \"react-router-config\";\r\nimport Layout1Topbar from \"./Layout1Topbar\";\r\nimport Layout1Sidenav from \"./Layout1Sidenav\";\r\nimport Footer from \"../SharedCompoents/Footer\";\r\nimport SecondarySidebar from \"../SharedCompoents/SecondarySidebar\";\r\nimport AppContext from \"app/appContext\";\r\n// import {EgretLoadable} from \"egret\";\r\n\r\n// const SecondarySidebar = EgretLoadable({\r\n//   loader: () => import(\"../SharedCompoents/SecondarySidebar\")\r\n// });\r\n\r\n// const Footer = EgretLoadable({\r\n//   loader: () => import(\"../SharedCompoents/Footer\")\r\n// });\r\n\r\n// const Layout1Topbar = EgretLoadable({\r\n//   loader: () => import(\"./Layout1Topbar\")\r\n// });\r\n\r\n// const Layout1Sidenav = EgretLoadable({\r\n//   loader: () => import(\"./Layout1Sidenav\")\r\n// });\r\n\r\nconst styles = theme => {\r\n  return {\r\n    layout: {\r\n      backgroundColor: theme.palette.background.default\r\n    }\r\n  };\r\n};\r\n\r\nclass Layout1 extends Component {\r\n  componentWillMount() {\r\n    if (isMdScreen()) {\r\n      this.updateSidebarMode({ mode: \"close\" });\r\n    }\r\n    // if (window) {\r\n    //   // SET DIRECTION\r\n    //   let { settings } = this.props;\r\n    //   document.body.setAttribute(\"dir\", settings.direction);\r\n    // }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // if (window) {\r\n    //   document.body.removeAttribute(\"dir\");\r\n    // }\r\n  }\r\n\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n    setLayoutSettings({\r\n      ...settings,\r\n      layout1Settings: {\r\n        ...settings.layout1Settings,\r\n        leftSidebar: {\r\n          ...settings.layout1Settings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { settings, classes, theme } = this.props;\r\n\r\n    let { layout1Settings } = settings;\r\n    let layoutClasses = {\r\n      [classes.layout]: true,\r\n      [`${settings.activeLayout} sidenav-${layout1Settings.leftSidebar.mode} theme-${theme.palette.type} flex`]: true,\r\n      \"topbar-fixed\": layout1Settings.topbar.fixed\r\n    };\r\n    return (\r\n      <AppContext.Consumer>\r\n        {({ routes }) => (\r\n          <div className={classList(layoutClasses)}>\r\n            {layout1Settings.leftSidebar.show && <Layout1Sidenav />}\r\n\r\n            <div className=\"content-wrap position-relative\">\r\n              {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\r\n                <Layout1Topbar />\r\n              )}\r\n\r\n              {settings.perfectScrollbar && (\r\n                <Scrollbar className=\"scrollable-content\">\r\n                  {layout1Settings.topbar.show &&\r\n                    !layout1Settings.topbar.fixed && <Layout1Topbar />}\r\n                  <div className=\"content\">{renderRoutes(routes)}</div>\r\n                  <div className=\"my-auto\" />\r\n                </Scrollbar>\r\n              )}\r\n\r\n              {!settings.perfectScrollbar && (\r\n                <div className=\"scrollable-content\">\r\n                  {layout1Settings.topbar.show &&\r\n                    !layout1Settings.topbar.fixed && <Layout1Topbar />}\r\n                  <div className=\"content\">{renderRoutes(routes)}</div>\r\n                  <div className=\"my-auto\" />\r\n                  {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n                </div>\r\n              )}\r\n\r\n              {settings.footer.show && settings.footer.fixed && <Footer />}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </AppContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nLayout1.propTypes = {\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(\r\n    mapStateToProps,\r\n    { setLayoutSettings }\r\n  )(Layout1)\r\n);\r\n"],"sourceRoot":""}