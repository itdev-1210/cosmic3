{"version":3,"sources":["app/views/rides/RideSidenav.jsx","app/views/rides/UserTable.jsx","app/views/rides/RideContainer.jsx","app/views/rides/Rides.jsx"],"names":["NavBox","_ref","comment","isActive","handlClickNavBar","value","react_default","a","createElement","className","onClick","RideSidenav","_ref2","RideSidenav_NavBox","desc","b","orderBy","UserTableHead","props","classes","order","onRequestSort","TableHead","TableRow","tableRow","headCells","map","headCell","TableCell","key","id","padding","disablePadding","sortDirection","TableSortLabel","active","direction","property","event","label","visuallyHidden","useStyles","makeStyles","theme","root","width","paper","marginBottom","spacing","table","minWidth","height","border","clip","margin","overflow","position","top","UserTable","_React$useState","React","useState","_React$useState2","Object","slicedToArray","setOrder","_React$useState3","_React$useState4","setOrderBy","_React$useState5","_React$useState6","selected","setSelected","_React$useState7","_React$useState8","page","setPage","_React$useState9","_React$useState10","rowsPerPage","setRowsPerPage","emptyRows","Math","min","rows","length","Paper","Table","aria-labelledby","size","aria-label","numSelected","onSelectAllClick","target","checked","newSelecteds","n","name","rowCount","TableBody","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","slice","row","isItemSelected","indexOf","labelId","concat","hover","selectedIndex","newSelected","handleClick","role","aria-checked","tabIndex","scope","Checkbox","inputProps","color","email","phone","country","status","style","colSpan","TablePagination","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","CustomCheck","withStyles","fontSize","FormControlLabel","RideContainer","data","control","labelPlacement","egret","rightPanel","Rides","state","totalRide","todayRide","totalRideUrl","todayRideUrl","open","_this","getRideData","getRenterData","setState","this","_this$state","ride","rideData","renter","renterData","Grid","container","item","lg","md","sm","xs","title","subtitle","icon","Card","elevation","rides_RideSidenav","rides_RideContainer","Component","connect","PropTypes","func","isRequired"],"mappings":"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","file":"static/js/14.d0bc2148.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst NavBox = ({\r\n    comment,\r\n    isActive,\r\n    handlClickNavBar,\r\n    value\r\n}) => {\r\n    return (\r\n        <div className={\"px-22 py-9 flex peple-nav-box \" + (isActive ? 'is-active': '')} onClick={() => handlClickNavBar(value)}>\r\n            <div>{comment}</div>\r\n        </div>\r\n    )\r\n}\r\nconst RideSidenav = ({\r\n    isActive,\r\n    handlClickNavBar\r\n}) => {\r\n    return (\r\n        <div className=\"px-26 py-33 bg-white\">\r\n            <NavBox\r\n                comment=\"Rides\"\r\n                isActive={isActive===\"1\" ? true: false}\r\n                handlClickNavBar={handlClickNavBar}\r\n                value=\"1\"\r\n            />\r\n            <NavBox\r\n                comment=\"Renters\"\r\n                isActive={isActive===\"2\" ? true: false}\r\n                handlClickNavBar={handlClickNavBar}\r\n                value=\"2\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RideSidenav","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nfunction UserTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow className={classes.tableRow}>\r\n        {props.headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nUserTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n  headCells: PropTypes.array.isRequired,\r\n};\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tableRow: {\r\n    height: \"75px\",\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function UserTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('name');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = props.rows.map(n => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = name => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Table\r\n          className={classes.table}\r\n          aria-labelledby=\"tableTitle\"\r\n          size={'medium'}\r\n          aria-label=\"User table\"\r\n        >\r\n          <UserTableHead\r\n            classes={classes}\r\n            numSelected={selected.length}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onSelectAllClick={handleSelectAllClick}\r\n            onRequestSort={handleRequestSort}\r\n            rowCount={props.rows.length}\r\n            headCells={props.headCells}\r\n          />\r\n          <TableBody>\r\n            {stableSort(props.rows, getSorting(order, orderBy))\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, index) => {\r\n                const isItemSelected = isSelected(row.id);\r\n                const labelId = `User-table-checkbox-${index}`;\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onClick={event => handleClick(event, row.id)}\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    selected={isItemSelected}\r\n                    className={classes.tableRow}\r\n                  >\r\n                    <TableCell padding=\"none\" id={labelId} scope=\"row\">\r\n                      <Checkbox\r\n                        checked={isItemSelected}\r\n                        inputProps={{ 'aria-labelledby': labelId }}\r\n                        color=\"default\"\r\n                      />\r\n                      {row.name}\r\n                    </TableCell>\r\n                    <TableCell>{row.email}</TableCell>\r\n                    <TableCell>{row.phone}</TableCell>\r\n                    <TableCell>{row.country}</TableCell>\r\n                    <TableCell>{row.status}</TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            {emptyRows > 0 && (\r\n              <TableRow style={{ height: (75) * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={props.rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport { ExportButton, FilterButton } from \"egret\";\r\nimport UserTable from './UserTable';\r\n\r\nconst CustomCheck = withStyles(theme => ({\r\n    root: {\r\n        fontSize: \"14px\",\r\n        color: \"#3f3356\",\r\n        height: \"36px\"\r\n    },\r\n}))(FormControlLabel);\r\n\r\nconst RideContainer = ({\r\n    data\r\n}) => {\r\n    const headCells = [\r\n        { id: 'name', disablePadding: true, label: 'Name' },\r\n        { id: 'email', disablePadding: false, label: 'Email' },\r\n        { id: 'phone', disablePadding: false, label: 'Phone' },\r\n        { id: 'country', disablePadding: false, label: 'Country' },\r\n        { id: 'status', disablePadding: false, label: 'Status' },\r\n    ];\r\n    return (\r\n        <div className=\"px-26 py-33 bg-white\">\r\n            <div className=\"py-3 flex\">\r\n                <CustomCheck\r\n                    value=\"end\"\r\n                    control={<Checkbox color=\"default\" />}\r\n                    label=\"Select All\"\r\n                    labelPlacement=\"end\"\r\n                />\r\n                <ExportButton />\r\n                <FilterButton rightPanel={<div>Ride Page</div>}/>\r\n            </div>\r\n            <UserTable \r\n                rows={data}\r\n                headCells={headCells}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RideContainer;","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { getRideData } from \"app/redux/actions/RideActions\";\r\nimport { getRenterData } from \"app/redux/actions/RenterActions\";\r\n\r\nimport {\r\n  DefaultCard,\r\n  EgretSidenavContainer,\r\n  EgretSidenav,\r\n  EgretSidenavContent\r\n} from \"egret\";\r\n\r\nimport RideSidenav from './RideSidenav';\r\nimport RideContainer from './RideContainer';\r\n\r\nclass Rides extends Component {\r\n  state = {\r\n    totalRide: \"486\",\r\n    todayRide: \"23\",\r\n    totalRideUrl: \"/assets/images/rides/total.svg\",\r\n    todayRideUrl: \"/assets/images/rides/today.svg\",\r\n    open: true,\r\n    isActive: \"1\",\r\n  };\r\n\r\n  handlClickNavBar = (value) => {\r\n    if (value === \"1\") {\r\n      this.props.getRideData()\r\n    } else {\r\n      this.props.getRenterData()\r\n    }\r\n    this.setState({\r\n      isActive: value,\r\n    })\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.getRideData()\r\n    this.props.getRenterData();\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      totalRide,\r\n      todayRide,\r\n      totalRideUrl,\r\n      todayRideUrl,\r\n      isActive,\r\n    } = this.state;\r\n\r\n    let data = isActive === \"1\" ? this.props.ride.rideData : this.props.renter.renterData;\r\n\r\n    return (\r\n      <div className=\"m-sm-30\">\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={3} md={3} sm={12} xs={12}>\r\n            <DefaultCard title={totalRide} subtitle=\"Total Rides\" icon={totalRideUrl}/>\r\n          </Grid>\r\n          <Grid item lg={3} md={3} sm={12} xs={12}>\r\n            <DefaultCard title={todayRide} subtitle=\"Rides today\" icon={todayRideUrl}/>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Card className=\"w-100 overflow-auto mt-24\" elevation={6}>\r\n          <EgretSidenavContainer>\r\n            <EgretSidenav\r\n              width=\"295px\"\r\n              open={this.state.open}\r\n            >\r\n              <RideSidenav\r\n                isActive={isActive}\r\n                handlClickNavBar={this.handlClickNavBar}\r\n                />\r\n            </EgretSidenav>\r\n            <div className={\"border-height\"}></div>\r\n            <EgretSidenavContent>\r\n              <RideContainer\r\n                data={data}\r\n              />\r\n            </EgretSidenavContent>\r\n          </EgretSidenavContainer>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  ride: state.ride,\r\n  renter: state.renter,\r\n  getRideData: PropTypes.func.isRequired,\r\n  getRenterData: PropTypes.func.isRequired,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getRideData, getRenterData }\r\n)(Rides);"],"sourceRoot":""}